buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

plugins {
  id 'org.unbroken-dome.test-sets' version '2.1.1'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'de.stefan_hauschildt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

ext {
  springCloudVersion = 'Finchley.SR2'
}

testSets {
  componentTest
  integrationTest
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.0.1.RELEASE'
  implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin'
  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
  implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
  implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
  implementation group: 'org.liquibase', name: 'liquibase-core'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', 'version': '4.5.6'

  runtime group: 'org.postgresql', name: 'postgresql', version: '42.1.4'

  testCompile('org.springframework.boot:spring-boot-starter-test') {
    exclude module: 'junit'
  }
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'io.rest-assured:rest-assured:3.3.0'
  testImplementation 'com.github.tomakehurst:wiremock-standalone:2.6.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
  testImplementation 'org.hibernate:hibernate-testing:5.2.15.Final'
  testImplementation 'com.h2database:h2:1.4.196'

  componentTestCompile sourceSets.main.output
  componentTestCompile sourceSets.test.output

  integrationTestCompile sourceSets.main.output
  integrationTestCompile sourceSets.test.output
  integrationTestImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.7.3'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

idea {
  module {
    testSourceDirs += project.sourceSets.componentTest.kotlin.srcDirs
    testSourceDirs += project.sourceSets.componentTest.resources.srcDirs
    testSourceDirs += project.sourceSets.integrationTest.kotlin.srcDirs
    testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
  }
}